package com.inventorysystem_project.entities;

// Importa tus enums del paquete donde los hayas creado
import com.inventorysystem_project.entities.enums.EstadoTicket;
import com.inventorysystem_project.entities.enums.PrioridadTicket;
import com.inventorysystem_project.entities.enums.TipoTicket; 

import jakarta.persistence.*;
import lombok.AllArgsConstructor;
import lombok.NoArgsConstructor;

import java.time.LocalDateTime;
import java.util.List;

@Entity
@Table(name = "ticket_soporte")
@NoArgsConstructor
@AllArgsConstructor
public class TicketSoporte {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Column(nullable = false)
    private LocalDateTime fechaReporte;

    @ManyToOne(fetch = FetchType.LAZY) // Asume que Usuario ya existe en .entities
    @JoinColumn(name = "usuario_reporta_id", nullable = false)
    private Usuario usuarioReporta;

    @Column(columnDefinition = "TEXT", nullable = false)
    private String descripcion;

    @Enumerated(EnumType.STRING)
    @Column(nullable = false)
    private PrioridadTicket prioridad;

    @Enumerated(EnumType.STRING)
    @Column(nullable = false)
    private EstadoTicket estado;

    @ManyToOne(fetch = FetchType.LAZY) // Asume que Usuario ya existe en .entities
    @JoinColumn(name = "responsable_asignado_id")
    private Usuario responsableAsignado;

    @Enumerated(EnumType.STRING)
    @Column(nullable = false)
    private TipoTicket tipo;

    @Column(columnDefinition = "TEXT")
    private String solucion;

    private LocalDateTime fechaCierre;

    @OneToMany(mappedBy = "ticket", cascade = CascadeType.ALL, fetch = FetchType.LAZY)
    private List<ComentarioTicket> comentarios;

    // Getters and Setters generated by Lombok (@Data annotation)
    // If you want explicit getters and setters, you can remove @Data and use the following:

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public LocalDateTime getFechaReporte() {
        return fechaReporte;
    }

    public void setFechaReporte(LocalDateTime fechaReporte) {
        this.fechaReporte = fechaReporte;
    }

    public Usuario getUsuarioReporta() {
        return usuarioReporta;
    }

    public void setUsuarioReporta(Usuario usuarioReporta) {
        this.usuarioReporta = usuarioReporta;
    }

    public String getDescripcion() {
        return descripcion;
    }

    public void setDescripcion(String descripcion) {
        this.descripcion = descripcion;
    }

    public PrioridadTicket getPrioridad() {
        return prioridad;
    }

    public void setPrioridad(PrioridadTicket prioridad) {
        this.prioridad = prioridad;
    }

    public EstadoTicket getEstado() {
        return estado;
    }

    public void setEstado(EstadoTicket estado) {
        this.estado = estado;
    }

    public Usuario getResponsableAsignado() {
        return responsableAsignado;
    }

    public void setResponsableAsignado(Usuario responsableAsignado) {
        this.responsableAsignado = responsableAsignado;
    }

    public TipoTicket getTipo() {
        return tipo;
    }

    public void setTipo(TipoTicket tipo) {
        this.tipo = tipo;
    }

    public String getSolucion() {
        return solucion;
    }

    public void setSolucion(String solucion) {
        this.solucion = solucion;
    }

    public LocalDateTime getFechaCierre() {
        return fechaCierre;
    }

    public void setFechaCierre(LocalDateTime fechaCierre) {
        this.fechaCierre = fechaCierre;
    }

    public List<ComentarioTicket> getComentarios() {
        return comentarios;
    }

    public void setComentarios(List<ComentarioTicket> comentarios) {
        this.comentarios = comentarios;
    }
    
}    